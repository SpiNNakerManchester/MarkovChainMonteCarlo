# Copyright (c) 2020 The University of Manchester
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This workflow will install Python dependencies, run tests, lint and rat with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: C Actions
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Prepare
      uses: SpiNNakerManchester/SupportScripts/actions/prepare@main
      with:
        python-version: "3.12"
        checkout_dependencies: spinnaker_tools spinn_common SpiNNFrontEndCommon
        install_dependencies: SpiNNUtils
        install_module: false
        install_check_tools: false
        ubuntu_packages: doxygen gcc-arm-none-eabi

    - name: Lint C code using Vera++
      # Note: run this before building to avoid linting modified_src directories
      uses: SpiNNakerManchester/SupportScripts/actions/vera@main
      with:
        base-dir: c_models

    - name: Set SPINN_DIRS
      run: |
        echo "Set SPINN_DIRS to $PWD/spinnaker_tools"
        echo "SPINN_DIRS=$PWD/spinnaker_tools" >> $GITHUB_ENV
        
    - name: Build SpiNNaker C dependencies
      run: |
        make -C $SPINN_DIRS
        make -C spinn_common install
        make -C SpiNNFrontEndCommon/c_common install

    - name: Build C code
      run: make
      working-directory: c_models
      env:
        CFLAGS: -fdiagnostics-color=always

    # To be added: Documentation building
#    - name: Build documentation using doxygen
#      run: make doxysetup doxygen
#      working-directory: c_models

    # Note: This workflow does not run the C code; that'd be an integration test