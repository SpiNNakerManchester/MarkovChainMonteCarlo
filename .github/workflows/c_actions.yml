# Copyright (c) 2020 The University of Manchester
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# This workflow will install Python dependencies, run tests, lint and rat with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: C Actions
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Prepare
      uses: SpiNNakerManchester/SupportScripts/actions/prepare@action-dash
      with:
        python-version: "3.12"
        checkout_dependencies: spinnaker_tools spinn_common SpiNNFrontEndCommon
        install_dependencies: SpiNNUtils
        install-module: false
        install_check_tools: false
        ubuntu-packages: doxygen gcc-arm-none-eabi

    - name: Lint C code using Vera++
      # Note: run this before building to avoid linting modified_src directories
      uses: SpiNNakerManchester/SupportScripts/actions/vera@main
      with:
        base-dir: c_models

    - name: Set SPINN_DIRS
      run: |
        echo "Set SPINN_DIRS to $PWD/spinnaker_tools"
        echo "SPINN_DIRS=$PWD/spinnaker_tools" >> $GITHUB_ENV
        
    - name: Build SpiNNaker C dependencies
      run: |
        make -C $SPINN_DIRS
        make -C spinn_common install
        make -C SpiNNFrontEndCommon/c_common install

    - name: Build C code
      run: make
      working-directory: c_models
      env:
        CFLAGS: -fdiagnostics-color=always

    # To be added: Documentation building
#    - name: Build documentation using doxygen
#      run: make doxysetup doxygen
#      working-directory: c_models

    # Note: This workflow does not run the C code; that'd be an integration test